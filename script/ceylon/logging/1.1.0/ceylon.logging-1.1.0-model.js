(function(define) { define(function(require, ex$, module) {
ex$.$CCMM$={"$mod-deps":["ceylon.language\/1.1.0","ceylon.collection\/1.1.0"],"$mod-name":"ceylon.logging","$mod-version":"1.1.0","$mod-bin":"7.0","ceylon.logging":{warn:{super:{pk:".",nm:"Priority"},pa:1,mt:"o",an:{doc:["A warning, usually indicating that the program can continue\nwith its current work."]},nm:"warn"},defaultPriority:{$t:{pk:".",nm:"Priority"},pa:1025,mt:"a",an:{doc:["The default [[Priority]] for newly created [[Logger]]s. \nThis priority is inherited by all other loggers which do \nnot have a priority explicitly assigned to \n[[Logger.priority]]."]},nm:"defaultPriority"},error:{super:{pk:".",nm:"Priority"},pa:1,mt:"o",an:{doc:["An error, often causing the program to abandon its current \nwork."]},nm:"error"},loggers:{$t:{md:"ceylon.collection",tp:[{md:"$",mt:"tp",pk:"$",nm:"String"},{mt:"tp",pk:".",nm:"Logger"}],pk:"ceylon.collection",nm:"MutableMap"},mt:"a",nm:"loggers"},trace:{super:{pk:".",nm:"Priority"},pa:1,mt:"o",an:{doc:["An event that is only interesting when the programmer is\npulling out hair while debugging the program."]},nm:"trace"},LogWriter:{pa:1,mt:"als",an:{see:["addLogWriter"],doc:["A function capable of outputting log messages. `LogWriter`s\nare registered with the logging system by calling \n[[addLogWriter]]."]},$alias:{md:"$",tp:[{md:"$",mt:"tp",pk:"$",nm:"Anything"},{md:"$",mt:"tp",tp:[{comp:"u",mt:"tp",l:[{pk:".",nm:"Priority"},{comp:"u",l:[{pk:".",nm:"Category"},{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{comp:"u",l:[{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},{pk:".",nm:"Nothing"}]}]}]}]},{mt:"tp",pk:".",nm:"Priority"},{md:"$",mt:"tp",tp:[{comp:"u",mt:"tp",l:[{pk:".",nm:"Category"},{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{comp:"u",l:[{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},{pk:".",nm:"Nothing"}]}]}]},{mt:"tp",pk:".",nm:"Category"},{md:"$",mt:"tp",tp:[{comp:"u",mt:"tp",l:[{md:"$",pk:"$",nm:"String"},{comp:"u",l:[{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},{pk:".",nm:"Nothing"}]}]},{md:"$",mt:"tp",pk:"$",nm:"String"},{md:"$",mt:"tp",tp:[{comp:"u",mt:"tp",l:[{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},{pk:".",nm:"Nothing"}]},{comp:"u",mt:"tp",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},{md:"$",mt:"tp",pk:"$",nm:"Empty"}],pk:"$",nm:"Tuple"}],pk:"$",nm:"Tuple"}],pk:"$",nm:"Tuple"}],pk:"$",nm:"Tuple"}],pk:"$",nm:"Callable"},nm:"LogWriter"},fatal:{super:{pk:".",nm:"Priority"},pa:1,mt:"o",an:{doc:["A serious failure, usually leading to program termination."]},nm:"fatal"},addLogWriter:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Register a new [[log writer function|log]] with the logging\nsystem. Log messages are directed to all registered \n[[LogWriter]]s."]},ps:[[{$t:{pk:".",nm:"LogWriter"},mt:"prm",nm:"log"}]],nm:"addLogWriter"},debug:{super:{pk:".",nm:"Priority"},pa:1,mt:"o",an:{doc:["An event that is only interesting when debugging the \nprogram."]},nm:"debug"},Logger:{pa:1,mt:"i",an:{see:["logger"],doc:["An object that sends log messages relating to a particular\n[[topic|category]]. A `Logger` instance for a [[Category]] \nmay be obtained by invoking [[logger]].\n\n    Logger logger = logger(`module org.hibernate`);\n\nEach `Logger` has a [[priority]]. Log messages with a \npriority lower than the current priority of the `Logger` \nwill not be sent.\n\n    logger.priority = warn;\n    logger.info(\"hello\"); \/\/not sent\n    logger.error(\"sos\"); \/\/sent"]},$m:{warn:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Send a [[ceylon.logging::warn]] log message."]},ps:[[{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"warn"},enabled:{$t:{md:"$",pk:"$",nm:"Boolean"},pa:1,mt:"m",an:{doc:["Determines if log messages with the given priority will\nbe sent by this `Logger`. That is, if the given \npriority is at least as high as this `Logger`s\n[[current priority|Logger.priority]]."]},ps:[[{$t:{pk:".",nm:"Priority"},mt:"prm",nm:"priority"}]],nm:"enabled"},error:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Send an [[ceylon.logging::error]] log message."]},ps:[[{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"error"},trace:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Send a [[ceylon.logging::trace]] log message."]},ps:[[{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"trace"},fatal:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Send a [[ceylon.logging::fatal]] log message."]},ps:[[{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"fatal"},debug:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Send a [[ceylon.logging::debug]] log message."]},ps:[[{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"debug"},log:{$t:{md:"$",pk:"$",nm:"Anything"},pa:5,mt:"m",an:{doc:["Send a log [[message]] with the given [[priority]].\nOptionally, an [[exception]] may be given."]},ps:[[{$t:{pk:".",nm:"Priority"},mt:"prm",nm:"priority"},{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"log"},info:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Send an [[ceylon.logging::info]] log message."]},ps:[[{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"info"},render:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"m",an:{doc:["Evaluate the given message, producing a [[String]]."]},ps:[[{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"}]],nm:"render"}},$at:{category:{$t:{pk:".",nm:"Category"},pa:5,mt:"a",an:{doc:["The [[topic|Category]] to which log messages sent by \nthis `Logger` relate."]},nm:"category"},Message:{pa:1,mt:"als",an:{doc:["A log message, which may be a string or an unevaluated \nstring, represented by the function type `String()`."]},$alias:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",tp:[{md:"$",mt:"tp",pk:"$",nm:"String"},{md:"$",mt:"tp",pk:"$",nm:"Empty"}],pk:"$",nm:"Callable"}]},nm:"Message"},priority:{$t:{pk:".",nm:"Priority"},pa:1029,mt:"a",an:{see:["defaultPriority","enabled"],doc:["The current priority of this `Logger`. If not \nexplicitly set, the [[default|defaultPriority]] \npriority is used."]},nm:"priority"}},nm:"Logger"},info:{super:{pk:".",nm:"Priority"},pa:1,mt:"o",an:{doc:["An important event in the program lifecycle."]},nm:"info"},Priority:{super:{md:"$",pk:"$",nm:"Basic"},of:[{pk:".",nm:"fatal"},{pk:".",nm:"error"},{pk:".",nm:"warn"},{pk:".",nm:"info"},{pk:".",nm:"debug"},{pk:".",nm:"trace"}],pa:257,mt:"c",an:{doc:["The importance of a log message. `Priority`s have a total\norder running from most important to least important."]},sts:[{md:"$",tp:[{mt:"tp",pk:".",nm:"Priority"}],pk:"$",nm:"Comparable"}],$m:{compare:{$t:{md:"$",pk:"$",nm:"Comparison"},pa:3,mt:"m",ps:[[{$t:{pk:".",nm:"Priority"},mt:"prm",nm:"other"}]],nm:"compare"}},$at:{string:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"a",an:{doc:["The name of this priority."]},nm:"string"},integer$cyjscj:{$t:{md:"$",pk:"$",nm:"Integer"},mt:"a",an:{doc:["An integer measuring the importance of this `Priority`."]},nm:"integer"}},ps:[{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"prm",an:{doc:["The name of this priority."]},$hdn:1,nm:"string"},{$t:{md:"$",pk:"$",nm:"Integer"},mt:"prm",an:{doc:["An integer measuring the importance of this `Priority`."]},$hdn:1,nm:"integer"}],nm:"Priority"},"$pkg-shared":1,Category:{pa:1,mt:"als",an:{see:["logger","Logger.category"],doc:["A topic to which a log message relates."]},$alias:{comp:"u",l:[{md:"$",pk:"ceylon.language.meta.declaration",nm:"Module"},{md:"$",pk:"ceylon.language.meta.declaration",nm:"Package"}]},nm:"Category"},logWriters:{$t:{md:"ceylon.collection",tp:[{mt:"tp",pk:".",nm:"LogWriter"}],pk:"ceylon.collection",nm:"MutableList"},mt:"a",nm:"logWriters"},logger:{$t:{md:"$",tp:[{mt:"tp",pk:".",nm:"Logger"},{md:"$",mt:"tp",tp:[{comp:"u",mt:"tp",l:[{pk:".",nm:"Category"},{pk:".",nm:"Nothing"}]},{mt:"tp",pk:".",nm:"Category"},{md:"$",mt:"tp",pk:"$",nm:"Empty"}],pk:"$",nm:"Tuple"}],pk:"$",nm:"Callable"},pa:1025,mt:"a",an:{doc:["Function to obtain a canonical [[Logger]] for the given \n[[Category]]. For each [[Category]], there is at most one \ninstance of `Logger`.\n\nAssigning a new function of type `Logger(Category)` to\n`logger` allows the program to specify a custom strategy \nfor `Logger` instantiation."]},nm:"logger"},LoggerImpl:{super:{md:"$",pk:"$",nm:"Basic"},mt:"c",sts:[{pk:".",nm:"Logger"}],$m:{log:{$t:{md:"$",pk:"$",nm:"Anything"},pa:3,mt:"m",ps:[[{$t:{pk:".",nm:"Priority"},mt:"prm",nm:"priority"},{$t:{pk:".",nm:"Logger.Message"},mt:"prm",nm:"message"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Exception"}]},def:1,mt:"prm",nm:"exception"}]],nm:"log"}},$at:{category:{$t:{pk:".",nm:"Category"},pa:3,mt:"a",nm:"category"},explicitPriority$jm0rg3:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"Priority"}]},pa:1027,mt:"a",nm:"explicitPriority"},priority:{$t:{pk:".",nm:"Priority"},pa:1027,$set:{mt:"s"},mt:"g",nm:"priority"}},ps:[{$t:{pk:".",nm:"Category"},pa:3,mt:"prm",nm:"category"}],nm:"LoggerImpl"}}};
});
}(typeof define==='function' && define.amd ? define : function (factory) {
if (typeof exports!=='undefined') { factory(require, exports, module);
} else { throw 'no module loader'; }
}));
